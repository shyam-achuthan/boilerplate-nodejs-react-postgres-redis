version: '3.8'

services:
  # Backend service
  backend:
    build:
      context: ../src/backend
      dockerfile: ./backend.Dockerfile
    container_name: app-backend
    restart: unless-stopped
    volumes:
      - ./src/backend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=mydatabase_dev
      - DB_HOST=postgres
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=development_secret_key
      - JWT_EXPIRATION=1d
    depends_on:
      - postgres
      - redis
    networks:
      - app-network

  # Frontend service
  frontend:
    build:
      context: ../src/frontend
      dockerfile: ./frontend.Dockerfile
    container_name: app-frontend
    restart: unless-stopped
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    ports:
      - "3001:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api
    networks:
      - app-network

  # PostgreSQL service
  postgres:
    image: postgres:14-alpine
    container_name: app-postgres
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mydatabase_dev
    ports:
      - "5432:5432"
    volumes:
      - ../postgres-data:/var/lib/postgresql/data
    networks:
      - app-network

  # Redis service
  redis:
    image: redis:7-alpine
    container_name: app-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - ../redis-data:/data
    networks:
      - app-network

  # pgAdmin (optional - for database management)
  pgadmin:
    image: dpage/pgadmin4
    container_name: app-pgadmin
    restart: unless-stopped
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@example.com
      - PGADMIN_DEFAULT_PASSWORD=admin
    ports:
      - "5050:80"
    volumes:
      - ../pgadmin-data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - app-network 

networks:
  app-network:
    driver: bridge